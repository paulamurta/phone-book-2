generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(256)
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  contacts  Contact[]
  groups    Group[]
}

model Group {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(50)
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  contacts  Contact[]
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Contact {
  id          String        @id @default(uuid())
  birthday    DateTime?     @db.Date
  phoneNumber String        @unique @db.VarChar(15)
  email       String?       @unique @db.VarChar(254)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ownerId     String
  groupId     String?
  firstName   String        @db.VarChar(100)
  lastName    String        @db.VarChar(200)
  favorite    Boolean       @default(false)
  group       Group?        @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  owner       User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  photo       ContactPhoto?
}

model ContactPhoto {
  id        String  @id @default(uuid())
  mimeType  String
  photoData Bytes
  contactId String  @unique
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)
}
